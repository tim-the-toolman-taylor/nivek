services:
  postgres:
    image: postgres:16
    container_name: nivek_postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    ports:
      - '5432:5432'
 
  core-api:
    build:
      context: .
      dockerfile: docker/images/go/Dockerfile.core-api
    container_name: nivek_core_api
    environment:
      - APP_NAME=${APP_NAME}
      - CORE_API_PORT=${CORE_API_PORT}
      - CORE_API_LISTEN_ADDRESS=${CORE_API_LISTEN_ADDRESS}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_SSL_MODE=${POSTGRES_SSL_MODE}
      - WINDY_API_TOKEN=${WINDY_API_TOKEN}
      - IP_INFO_API_TOKEN=${IP_INFO_API_TOKEN}
    networks:
      - app-network
    ports:
      - '8080:8080'

  vue:
    build:
      dockerfile: docker/images/vue/Dockerfile
    volumes:
      - './nivek-vue:/app'
    networks:
      - app-network

  nginx:
    ports:
      - '80:80'
    build:
      dockerfile: docker/images/nginx/Dockerfile
    volumes:
      - './nivek-vue:/app'
    networks:
      - app-network
    depends_on:
      - vue

volumes:
  postgres_data:
    name: postgres_data

networks:
  app-network:
    driver: bridge
